{"ast":null,"code":"import Calendar from'react-calendar';import{useState}from'react';import moment from'moment';import'react-calendar/dist/Calendar.css';import'../css/scheduleCalendar.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function CustomCalendar(_ref){let{totalData,startDate}=_ref;// 현재 선택된 날짜 상태관리\nconst[nowDate,setNowDate]=useState(new Date());// 날짜 클릭시 현재 날짜로 설정\nconst handleDayClick=nowDate=>{setNowDate(nowDate);};const datesToHighlight=startDate.map(date=>moment(date).format('YYYY-MM-DD'));const tileClassName=_ref2=>{let{date,view}=_ref2;// 해당 날짜가 datesToHighlight 배열에 있는지 확인\nif(view==='month'&&datesToHighlight.find(dDate=>moment(dDate).isSame(date,'day'))){return'highlight';}};const[mark,setMark]=useState([]);return/*#__PURE__*/_jsx(\"div\",{className:\"customCalendar\",children:/*#__PURE__*/_jsx(Calendar,{onChange:setNowDate// 날짜가 변경시 nowDate 업데이트\n,value:nowDate// 현재 선택된 날짜\n,onClickDay:handleDayClick// 날짜를 클릭하면 handleDayClick 함수를 호출\n,calendarType:\"gregory\",formatDay:(locale,date)=>moment(date).format('DD'),tileClassName:tileClassName,tileContent:_ref3=>{let{date,view}=_ref3;let html=[];if(datesToHighlight.find(x=>x===moment(date).format('YYYY-MM-DD'))){const matchingData=totalData.find(data=>moment(data.startDate).format('YYYY-MM-DD')===moment(date).format('YYYY-MM-DD'));const title=matchingData?matchingData.title:'No title';html.push(/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"mark\"}),/*#__PURE__*/_jsx(\"div\",{children:title})]},moment(date).format('YYYY-MM-DD')));}return/*#__PURE__*/_jsx(_Fragment,{children:html});}})});}","map":{"version":3,"names":["Calendar","useState","moment","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","CustomCalendar","_ref","totalData","startDate","nowDate","setNowDate","Date","handleDayClick","datesToHighlight","map","date","format","tileClassName","_ref2","view","find","dDate","isSame","mark","setMark","className","children","onChange","value","onClickDay","calendarType","formatDay","locale","tileContent","_ref3","html","x","matchingData","data","title","push"],"sources":["/Users/ljh/Desktop/포트폴리오/5.예술의전당/sac/src/components/CustomCalendar.jsx"],"sourcesContent":["import Calendar from 'react-calendar';\nimport { useState } from 'react';\nimport moment from 'moment';\nimport 'react-calendar/dist/Calendar.css';\nimport '../css/scheduleCalendar.css';\n\nexport default function CustomCalendar({ totalData, startDate }) {\n  // 현재 선택된 날짜 상태관리\n  const [nowDate, setNowDate] = useState(new Date());\n\n  // 날짜 클릭시 현재 날짜로 설정\n  const handleDayClick = (nowDate) => {\n    setNowDate(nowDate);\n  };\n\n  const datesToHighlight = startDate.map((date) => moment(date).format('YYYY-MM-DD'));\n\n  const tileClassName = ({ date, view }) => {\n    // 해당 날짜가 datesToHighlight 배열에 있는지 확인\n    if (view === 'month' && datesToHighlight.find((dDate) => moment(dDate).isSame(date, 'day'))) {\n      return 'highlight';\n    }\n  };\n\n  const [mark, setMark] = useState([]);\n\n  return (\n    <div className='customCalendar'>\n      <Calendar\n        onChange={setNowDate} // 날짜가 변경시 nowDate 업데이트\n        value={nowDate} // 현재 선택된 날짜\n        onClickDay={handleDayClick} // 날짜를 클릭하면 handleDayClick 함수를 호출\n        calendarType='gregory'\n        formatDay={(locale, date) => moment(date).format('DD')}\n        tileClassName={tileClassName}\n        tileContent={({ date, view }) => {\n          let html = [];\n          if (datesToHighlight.find((x) => x === moment(date).format('YYYY-MM-DD'))) {\n            const matchingData = totalData.find(\n              (data) =>\n                moment(data.startDate).format('YYYY-MM-DD') === moment(date).format('YYYY-MM-DD')\n            );\n            const title = matchingData ? matchingData.title : 'No title';\n            html.push(\n              <div key={moment(date).format('YYYY-MM-DD')}>\n                <div className='mark'></div>\n                <div>{title}</div>\n              </div>\n            );\n          }\n          return <>{html}</>;\n        }}\n      />\n    </div>\n  );\n}\n"],"mappings":"AAAA,MAAO,CAAAA,QAAQ,KAAM,gBAAgB,CACrC,OAASC,QAAQ,KAAQ,OAAO,CAChC,MAAO,CAAAC,MAAM,KAAM,QAAQ,CAC3B,MAAO,kCAAkC,CACzC,MAAO,6BAA6B,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAErC,cAAe,SAAS,CAAAC,cAAcA,CAAAC,IAAA,CAA2B,IAA1B,CAAEC,SAAS,CAAEC,SAAU,CAAC,CAAAF,IAAA,CAC7D;AACA,KAAM,CAACG,OAAO,CAAEC,UAAU,CAAC,CAAGb,QAAQ,CAAC,GAAI,CAAAc,IAAI,CAAC,CAAC,CAAC,CAElD;AACA,KAAM,CAAAC,cAAc,CAAIH,OAAO,EAAK,CAClCC,UAAU,CAACD,OAAO,CAAC,CACrB,CAAC,CAED,KAAM,CAAAI,gBAAgB,CAAGL,SAAS,CAACM,GAAG,CAAEC,IAAI,EAAKjB,MAAM,CAACiB,IAAI,CAAC,CAACC,MAAM,CAAC,YAAY,CAAC,CAAC,CAEnF,KAAM,CAAAC,aAAa,CAAGC,KAAA,EAAoB,IAAnB,CAAEH,IAAI,CAAEI,IAAK,CAAC,CAAAD,KAAA,CACnC;AACA,GAAIC,IAAI,GAAK,OAAO,EAAIN,gBAAgB,CAACO,IAAI,CAAEC,KAAK,EAAKvB,MAAM,CAACuB,KAAK,CAAC,CAACC,MAAM,CAACP,IAAI,CAAE,KAAK,CAAC,CAAC,CAAE,CAC3F,MAAO,WAAW,CACpB,CACF,CAAC,CAED,KAAM,CAACQ,IAAI,CAAEC,OAAO,CAAC,CAAG3B,QAAQ,CAAC,EAAE,CAAC,CAEpC,mBACEG,IAAA,QAAKyB,SAAS,CAAC,gBAAgB,CAAAC,QAAA,cAC7B1B,IAAA,CAACJ,QAAQ,EACP+B,QAAQ,CAAEjB,UAAY;AAAA,CACtBkB,KAAK,CAAEnB,OAAS;AAAA,CAChBoB,UAAU,CAAEjB,cAAgB;AAAA,CAC5BkB,YAAY,CAAC,SAAS,CACtBC,SAAS,CAAEA,CAACC,MAAM,CAAEjB,IAAI,GAAKjB,MAAM,CAACiB,IAAI,CAAC,CAACC,MAAM,CAAC,IAAI,CAAE,CACvDC,aAAa,CAAEA,aAAc,CAC7BgB,WAAW,CAAEC,KAAA,EAAoB,IAAnB,CAAEnB,IAAI,CAAEI,IAAK,CAAC,CAAAe,KAAA,CAC1B,GAAI,CAAAC,IAAI,CAAG,EAAE,CACb,GAAItB,gBAAgB,CAACO,IAAI,CAAEgB,CAAC,EAAKA,CAAC,GAAKtC,MAAM,CAACiB,IAAI,CAAC,CAACC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAE,CACzE,KAAM,CAAAqB,YAAY,CAAG9B,SAAS,CAACa,IAAI,CAChCkB,IAAI,EACHxC,MAAM,CAACwC,IAAI,CAAC9B,SAAS,CAAC,CAACQ,MAAM,CAAC,YAAY,CAAC,GAAKlB,MAAM,CAACiB,IAAI,CAAC,CAACC,MAAM,CAAC,YAAY,CACpF,CAAC,CACD,KAAM,CAAAuB,KAAK,CAAGF,YAAY,CAAGA,YAAY,CAACE,KAAK,CAAG,UAAU,CAC5DJ,IAAI,CAACK,IAAI,cACPtC,KAAA,QAAAwB,QAAA,eACE1B,IAAA,QAAKyB,SAAS,CAAC,MAAM,CAAM,CAAC,cAC5BzB,IAAA,QAAA0B,QAAA,CAAMa,KAAK,CAAM,CAAC,GAFVzC,MAAM,CAACiB,IAAI,CAAC,CAACC,MAAM,CAAC,YAAY,CAGrC,CACP,CAAC,CACH,CACA,mBAAOhB,IAAA,CAAAI,SAAA,EAAAsB,QAAA,CAAGS,IAAI,CAAG,CAAC,CACpB,CAAE,CACH,CAAC,CACC,CAAC,CAEV"},"metadata":{},"sourceType":"module","externalDependencies":[]}